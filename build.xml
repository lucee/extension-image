<?xml version="1.0" encoding="UTF-8"?>
<project default="clean" basedir="." name="formtag-extension">
	<description>
        Build Form Extension
    </description>
    <!-- set global properties for this build -->
  
  <property file="build.properties"/>

  <property name="lib" location="source/java/libs"/>
  <property name="src" location="source/java/src"/>
  <property name="srcImg" location="source/images"/>
  <property name="srcFld" location="source/fld"/>
  <property name="srcTld" location="source/tld"/>
  <property name="temp" location="temp"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  
  <buildnumber file="build.number"/>

  <scriptdef name="replace" language="javascript">
     <attribute name="haystack" />
     <attribute name="needle" />
     <attribute name="repl" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("haystack");
      var needle = attributes.get("needle");
      var repl = attributes.get("repl");
      text=text.trim();

      var regex = new RegExp(needle,'g');
      text=text.replace(regex,repl);
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <path id="classpath">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    
    <delete dir="${build}"/>
    <delete dir="${temp}"/>
    <delete dir="${dist}"/>

    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${temp}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}/"/>


  </target>


  <target name="copy" depends="init" description="copy source file to temp" >
    <!-- copy the source -->
    <copy todir="${temp}">
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
    </copy>


    <tstamp>
     <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>

    <echo file="${dist}/extension/META-INF/MANIFEST.MF">Manifest-Version: 1.0
Built-Date: ${NOW}
version: "${bundleversion}${build.number}${appendix}"
id: "${id}"
name: "${label}"
description: "${description}"
lucee-core-version: "${minversion}"
start-bundles: false
</echo>


  </target>
  


  <target name="compile" depends="copy"
        description="compile the source " >
    <!-- Compile  source -->
    <javac srcdir="${temp}" target="1.8" destdir="${build}" debug="true" debuglevel="lines,vars,source">
      <classpath refid="classpath" />
    </javac>

    <copy todir="${build}">
      <fileset dir="${src}">
        <include name="**/*.icc"/>
      </fileset>
    </copy>

  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    
 
    <!-- Put everything in ${build} into .jar file -->
    <jar 
    	jarfile="${dist}/extension/jars/${filename}-${bundleversion}${build.number}${appendix}.jar" basedir="${build}"  manifest="${src}/META-INF/MANIFEST.MF">
      <manifest>
        <attribute name="Bundle-Version" value="${bundleversion}${build.number}${appendix}"/>
        <attribute name="Built-Date" value="${NOW}"/>
        <attribute name="Bundle-SymbolicName" value="${bundlename}"/>

      </manifest>
    </jar>



    <!-- copy the context necessary
    <copy todir="${dist}/extension/webcontexts">
      <fileset dir="${context}">
        <include name="**/*.*"/>
      </fileset>
    </copy> -->

    <!-- copy the jars necessary -->
    <copy todir="${dist}/extension/jars">
      <fileset dir="${lib}">
        <include name="**/*.jar"/>
        <exclude name="**/javax.*"/>
        <exclude name="**/jsp-*"/>
        <exclude name="**/lucee.jar"/>
        <exclude name="**/org.apache.commons.codec-*.jar"/>
      </fileset>
    </copy>

    <!-- copy the logo -->
    <copy todir="${dist}/extension/META-INF">
      <fileset dir="${srcImg}/">
        <include name="logo.png"/>
      </fileset>
    </copy>


    <!-- copy the flds necessary -->
    <loadfile property="f1" srcFile="${srcFld}/function.fld" />
    <replace haystack="${f1}" needle="{bundle-name}" repl="${bundlename}" property="f2"/>
    <replace haystack="${f2}" needle="{bundle-version}" repl="${bundleversion}${build.number}${appendix}" property="f3"/>
    <echo message="${f3}" file="${dist}/extension/flds/image-function.fld"/>


    <!-- copy the tlds necessary -->
    <loadfile property="t1" srcFile="${srcTld}/tag.tldx" />
    <replace haystack="${t1}" needle="{bundle-name}" repl="${bundlename}" property="t2"/>
    <replace haystack="${t2}" needle="{bundle-version}" repl="${bundleversion}${build.number}${appendix}" property="t3"/>
    <echo message="${t3}" file="${dist}/extension/tlds/image-tag.tldx"/>


    <!-- Zip everything  -->
     <zip destfile="${dist}/${filename}-${bundleversion}${build.number}${appendix}.lex">
        <zipfileset dir="${dist}/extension"/>
    </zip>
		
  </target>

	<target name="clean"  depends="dist" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${temp}"/>
	</target>

</project>